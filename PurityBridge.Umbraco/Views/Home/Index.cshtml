@using Umbraco.Core.Models
@inherits Umbraco.Web.Mvc.UmbracoViewPage<Umbraco.Web.Models.RenderModel>
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    ViewBag.ShowTitleBar = false;
    var homeData = uQuery.GetNodesByType("HomeData");
}
<link href="~/Content/css/home.css" rel="stylesheet" />
@if (homeData.Any())
{
    var highlights = homeData.First().ChildrenAsList.Where(data => data.NodeTypeAlias == "Highlights");
    if (highlights.Any())
    {
        //var highlightsContent = Umbraco.TypedContent(highlights.First().Id);
        @section HighlightsSection {
            @Html.Partial("_HighlightsPartial", highlights.First())
        }
    }

    var featured = homeData.First().ChildrenAsList.Where(data => data.NodeTypeAlias == "Featured");
    if (featured.Any())
    {
        //var featuredContent = Umbraco.TypedContent(featured.First().Id);
        @section FeaturedSection {
            @Html.Partial("_FeaturesPartial", featured.First())
        }
    }

    @*if (Request.RawUrl.Contains("home1"))
        {
            <div class="grid-row">
                <div class="vc_row-fluid beautify">
                    @Html.Partial("_ContentPartial", Umbraco.TypedContent(homeData.First().Id).Children().FirstOrDefault(c => c.DocumentTypeAlias.Equals("index", StringComparison.InvariantCultureIgnoreCase) && c.IsVisible()))
                </div>

                <div class="vc_row-fluid beautify">
                    @Html.Partial("_ContentPartial", Umbraco.TypedContent(homeData.First().Id).Children().FirstOrDefault(c => c.DocumentTypeAlias.Equals("Testimonials", StringComparison.InvariantCultureIgnoreCase) && c.IsVisible()))
                </div>
            </div>
        }
        else
        {*@


    var homeDataIndex = homeData.First().GetChildNodesByType("HomeSliderContent").First();
    var rows = homeDataIndex.GetChildNodes();
    var alt = string.Empty;
    if (rows.Any())
    {

        var classActive = "active";
        var classVisible = "visible";
        <div class="comments clearfix" style="position:relative; overflow:hidden;">
            <div style='position: absolute;'>
                <div class="mask">
                    <div class="mask-wrapper">

                    </div>
                </div>
            </div>
            <div class="grid-row">

                <div class="tab">
                    @foreach (var column in rows)
                    {
                        alt = column.GetProperty<string>("thumbnailImageAltValue") ?? string.Empty;
                        <div class="box @classVisible">
                            @{
                        classVisible = "";
                            }
                            <h4>@column.GetProperty("heading")</h4>
                            <p>@Html.Raw(column.GetProperty("text").Value.ToString())</p>
                            <img src="@Umbraco.TypedContent(column.Id).GetCropUrl("photo", "home")" alt="@alt" class="img-hide">
                            @*  <img src="~/Content/pic/medical-slide-1.jpg" class="img-hide">*@
                        </div>
                    }
                    <ul class="tabs">
                        @foreach (var column in rows)
                        {
                            <li class="@classActive">
                                @{
                            classActive = "";
                                }
                            </li>
                        }
                    </ul>
                    <a class="tab-prev" href="#"></a>
                    <a class="tab-next" href="#"></a>
                </div>
            </div>
        </div>
    }
    var homeDataTreatements = homeData.First().GetChildNodesByType("HomeTreatmentContent").First();
    var treatmentRows = homeDataTreatements.GetChildNodes();

    <div class="treatments clearfix">
        <div class="grid-row">
            <div class="newsletter-title">
                @homeDataTreatements.GetProperty("heading")
            </div>
        </div>
        <div class="grid-row">

            <ul class="grid cs-style-3">
                @foreach (var treatmentCategory in uQuery.GetNodesByType("TreatmentsData").First().GetDescendantNodesByType("TreatmentsCategoryData"))
                {
                    var url = "/treatments/" + treatmentCategory.UrlName; umbraco.NodeFactory.Node matchedNode = uQuery.GetNodeByUrl(url); alt = treatmentCategory.GetProperty<string>("thumbnailImageAltValue") ?? string.Empty;
                    <li class="grid-col grid-col-3">
                        <figure class="cs-hover">
                            <img class="treatment-image" src="@Umbraco.TypedContent(treatmentCategory.Id).GetCropUrl("thumbnail", "thumb")" alt="@alt" />

                            <a href="@url">
                                <figcaption>
                                    <h3>@matchedNode.GetProperty("heading")</h3>
                                </figcaption>
                            </a>
                        </figure>
                        <p></p>
                    </li>

                    @*<div class="grid-col grid-col-3">
                            <div class="treatments-wrap">
                                <img class="treatment-image" src="@Umbraco.TypedContent(treatmentCategory.Id).GetCropUrl("thumbnail", "thumb")" alt="@alt" />
                                <a href="@url" class="treatment-link"> <div class="treatment-heading">@matchedNode.GetProperty("heading") </div></a>
                            </div>
                        </div>*@
                }
            </ul>
        </div>
        @if (treatmentRows.Any())
        {
            var video = treatmentRows.FirstOrDefault(c => c.NodeTypeAlias == "youtubevideo");
            <div class="grid-row">
                <div class="treatment-text">
                    @if(video != null)
                        {
                            var videoAltValue = video.GetProperty("thumbnailImageAltValue").Value ?? string.Empty;
                        <div>
                                <div class="item item2 isotope-item" style="position: absolute; left: 0px; top: 0px; transform: translate(0px, 0px);">
                                    <div class="pic">
                                        <img src="@video.GetCropUrl("thumbnail", "thumb")" alt="@alt" />
                                        <div class="links">
                                            <ul>
                                                <li>
                                                    <a class='fa fa-video-camera fancybox' data-fancybox-type='iframe' href='@url'></a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                    <h3>@child.GetPropertyValue("heading")</h3>
                                    @Html.Raw(child.GetProperty("text").Value.ToString())
                                </div>
</div>
                        }
                    @{
            var htmlText = treatmentRows.First().GetProperty("text").Value;
            htmlText = string.Format("{0}", htmlText.ToString().Replace('\n' + "", "</p><p>"));
                    }
                    @Html.Raw(htmlText)
                </div>
            </div>
        }
    </div>

    var subscribeUrl = "/umbraco/surface/subscription/SubscribeNewsletter/";
    <div class="newsletter clearfix">
        <div class="wrap">
            <div class="newsletter-title">@homeData.First().GetProperty("newsletterHeading").Value</div>
            <div class="newsletter-form clearfix">
                <form method="post" action="@subscribeUrl">
                    <input type="email" class="input-text" placeholder="Your email">
                    <input type="button" value="Subscribe" class="button submit" onclick="subscribeNewsLetter()">
                </form>
            </div>
            <p class="subscription-msg"></p>
            <p> @homeData.First().GetProperty("emailInformation").Value</p>
            <div style="display:none" id="email-procssing">@homeData.First().GetProperty("emailProcessingMessage").Value </div>
            <div style="display:none" id="email-procssing-success">@homeData.First().GetProperty("emailProcessingSuccessMessage").Value </div>
            <div style="display:none" id="email-procssing-error">@homeData.First().GetProperty("emailSubscriptionError").Value </div>
        </div>
    </div>
}
@section Scripts {
    <script src="~/scripts/library.js"></script>
    <script src="~/scripts/spascript.js"></script>
}
